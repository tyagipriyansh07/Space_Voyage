{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Priyansh Tyagi\\\\Desktop\\\\cosmic-dashboard\\\\frontend\\\\src\\\\components\\\\APODPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst APODPage = () => {\n  _s();\n  const [apod, setApod] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchAPOD = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/apod');\n        setApod(response.data);\n        setLoading(false);\n      } catch (error) {\n        setError('Failed to load APOD data');\n        setLoading(false);\n      }\n    };\n    fetchAPOD();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Astronomy Picture of the Day\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: apod.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), apod.media_type === 'image' ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: apod.url,\n      alt: apod.title,\n      className: \"apod-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"iframe\", {\n      title: \"APOD Video\",\n      src: apod.url,\n      frameBorder: \"0\",\n      allowFullScreen: true,\n      className: \"apod-video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: apod.explanation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(APODPage, \"74MKNXr46BZRPfMJCj2HNKNyq5s=\");\n_c = APODPage;\nexport default APODPage;\nvar _c;\n$RefreshReg$(_c, \"APODPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","APODPage","_s","apod","setApod","loading","setLoading","error","setError","fetchAPOD","response","get","data","children","fileName","_jsxFileName","lineNumber","columnNumber","className","title","media_type","src","url","alt","frameBorder","allowFullScreen","explanation","_c","$RefreshReg$"],"sources":["C:/Users/Priyansh Tyagi/Desktop/cosmic-dashboard/frontend/src/components/APODPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst APODPage = () => {\r\n  const [apod, setApod] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchAPOD = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/apod');\r\n        setApod(response.data);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        setError('Failed to load APOD data');\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchAPOD();\r\n  }, []);\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>{error}</div>;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Astronomy Picture of the Day</h1>\r\n      <h2>{apod.title}</h2>\r\n      {apod.media_type === 'image' ? (\r\n        <img src={apod.url} alt={apod.title} className=\"apod-image\" />\r\n      ) : (\r\n        <iframe title=\"APOD Video\" src={apod.url} frameBorder=\"0\" allowFullScreen className=\"apod-video\"></iframe>\r\n      )}\r\n      <p>{apod.explanation}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default APODPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,gCAAgC,CAAC;QAClEP,OAAO,CAACM,QAAQ,CAACE,IAAI,CAAC;QACtBN,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,QAAQ,CAAC,0BAA0B,CAAC;QACpCF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IACDG,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIJ,OAAO,EAAE,oBAAOL,OAAA;IAAAa,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACzC,IAAIV,KAAK,EAAE,oBAAOP,OAAA;IAAAa,QAAA,EAAMN;EAAK;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAEpC,oBACEjB,OAAA;IAAKkB,SAAS,EAAC,WAAW;IAAAL,QAAA,gBACxBb,OAAA;MAAAa,QAAA,EAAI;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrCjB,OAAA;MAAAa,QAAA,EAAKV,IAAI,CAACgB;IAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACpBd,IAAI,CAACiB,UAAU,KAAK,OAAO,gBAC1BpB,OAAA;MAAKqB,GAAG,EAAElB,IAAI,CAACmB,GAAI;MAACC,GAAG,EAAEpB,IAAI,CAACgB,KAAM;MAACD,SAAS,EAAC;IAAY;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAE9DjB,OAAA;MAAQmB,KAAK,EAAC,YAAY;MAACE,GAAG,EAAElB,IAAI,CAACmB,GAAI;MAACE,WAAW,EAAC,GAAG;MAACC,eAAe;MAACP,SAAS,EAAC;IAAY;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAC1G,eACDjB,OAAA;MAAAa,QAAA,EAAIV,IAAI,CAACuB;IAAW;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEV,CAAC;AAACf,EAAA,CAlCID,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AAoCd,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}